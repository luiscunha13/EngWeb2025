1. Quantos livros têm a palavra Love no título;

db.livros1.countDocuments({
  title: { 
    $regex: /Love/i  
  }
});

2. Quais os títulos dos livros, em ordem alfabética, em que um dos autores tem apelido Austen?

db.livros.find(
  { author: /Austen$/i },
  { title: 1, _id: 0 }
).sort({ title: 1 })

db.livros1.find(
  { "author": { $regex: /Austen/i } },
  { "title": 1, "_id": 0 }
).sort({ "title": 1 })

3. Qual a lista de autores (ordenada alfabeticamente e sem repetições)?

db.livros.aggregate([
  { $unwind: "$author" },          
  { $group: { _id: "$author" } },  
  { $sort: { _id: 1 } },            
  { $project: { 
      _id: 0,                       
      author: "$_id"                
  }}
]);

db.livros1.aggregate([
  { $unwind: "$author" },
  { $group: { _id: "$author" } },
  { $sort: { "_id": 1 } },
  { $project: { "author": "$_id", "_id": 0 } }
])

4. Qual a distribuição de livros por género (genre) (quantos livros tem cada género)?

db.livros.aggregate([
  { $unwind: "$genres" },           
  { $group: { 
      _id: "$genres",              
      totalLivros: { $sum: 1 }      
  }},
  { $sort: { totalLivros: -1 } },  
  { $project: { 
      _id: 0,                      
      genero: "$_id",              
      totalLivros: 1                
  }}
]);

5. Quais os títulos dos livros e respetivos isbn, em ordem alfabética de título, em que um dos personagens (characters) é Sirius Black?

db.livros.find(
  { 
    characters: { 
      $regex: /Sirius Black/i 
    } 
  },
  { 
    title: 1,     
    isbn: 1,      
    _id: 0        
  }
).sort({ title: 1 });
